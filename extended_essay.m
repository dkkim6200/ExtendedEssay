function extended_essay()   [u, v, minZeta] = approximate(0, 2, 1, 3, 0.1);   printf("u: %d\n", u);   printf("v: %d\n", v);   printf("min(zeta(u,v)): %d\n", minZeta);   printf("\n");      if (u <= 0)     u = 0.1;   endif      for i = 1:9     [u, v, minZeta] = approximate(u-10^(-i), u+10^(-i), v-10^(-i), v+10^(-i), 10^(-i-1));     printf("u: %d\n", u);     printf("v: %d\n", v);     printf("min(zeta(u,v)): %d\n", minZeta);     printf("\n");          if (u <= 0)       u = 10^(-i-1);     endif   endforendfunctionfunction retval = cycloid_x(t)  retval = pi * t - sin(pi * t);endfunctionfunction retval = cycloid_y(t)  retval = 1 - cos(pi * t);endfunctionfunction retval = bezier(t, P0, P1, P2, P3)  retval = P0 .* (1-t).^3 + 3 .* P1 .* (1-t).^2 .* t + 3 .* P2 .* (1-t) .* t.^2 + P3 .* t.^3;endfunctionfunction retval = epsilon(t, P0, P1, P2, P3) % t is scalar value, and P0~P3 are 2D vector.  Bx = bezier(t, P0(1), P1(1), P2(1), P3(1));  By = bezier(t, P0(2), P1(2), P2(2), P3(2));    retval = sqrt((cycloid_x(t)-Bx).^2 + (cycloid_y(t)-By).^2);endfunctionfunction retval = zeta(u, v) % Using t interval of 0.001  t = 0:0.001:1;  retval = max(epsilon(t, [0, 0], [0, u], [pi - v, 2], [pi, 2]));endfunctionfunction [u, v, minZeta] = approximate(u_start, u_end, v_start, v_end, interval)  minZeta = inf;  u = 0;  v = 0;    for i = u_start:interval:u_end    for j = v_start:interval:v_end      curZeta = zeta(i, j);            if (curZeta < minZeta)        minZeta = curZeta;        u = i;        v = j;      endif    endfor  endforendfunction